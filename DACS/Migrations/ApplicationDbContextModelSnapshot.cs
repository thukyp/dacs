// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DACS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DACS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DACS.Models.ChiTietDanhGia", b =>
                {
                    b.Property<string>("M_KhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_SanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTa_DanhGia")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("MucDoHaiLong")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.HasKey("M_KhachHang", "M_SanPham");

                    b.HasIndex("M_SanPham");

                    b.ToTable("ChiTietDanhGias");
                });

            modelBuilder.Entity("DACS.Models.ChiTietDatHang", b =>
                {
                    b.Property<string>("M_SanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_DonHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("GiaDatHang")
                        .HasColumnType("bigint");

                    b.Property<float>("Khoiluong")
                        .HasColumnType("real");

                    b.Property<string>("M_CTDatHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M_KhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("TongTien")
                        .HasColumnType("bigint");

                    b.Property<string>("TrangThaiDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("M_SanPham", "M_DonHang");

                    b.HasIndex("M_DonHang");

                    b.HasIndex("M_KhachHang");

                    b.ToTable("ChiTietDatHangs");
                });

            modelBuilder.Entity("DACS.Models.ChiTietHoanTra", b =>
                {
                    b.Property<string>("M_HoanTra")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_DonHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("SoTienHoan")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TrangThaiSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("M_HoanTra", "M_DonHang");

                    b.HasIndex("M_DonHang");

                    b.ToTable("ChiTietHoanTras");
                });

            modelBuilder.Entity("DACS.Models.ChiTietLienHe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M_KhachHang")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("M_KhachHang");

                    b.ToTable("ChiTietLienHe");
                });

            modelBuilder.Entity("DACS.Models.ChiTietPhieuXuat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("M_DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_LoaiSP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("MaPhieuXuat")
                        .HasColumnType("int");

                    b.Property<long>("SoLuong")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("M_DonViTinh");

                    b.HasIndex("M_LoaiSP");

                    b.HasIndex("MaPhieuXuat");

                    b.ToTable("ChiTietPhieuXuats");
                });

            modelBuilder.Entity("DACS.Models.ChiTietThuGom", b =>
                {
                    b.Property<string>("M_ChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("DacTinh_AmUot")
                        .HasColumnType("bit");

                    b.Property<bool>("DacTinh_CongKenh")
                        .HasColumnType("bit");

                    b.Property<bool>("DacTinh_DaXuLy")
                        .HasColumnType("bit");

                    b.Property<bool>("DacTinh_DoAmCao")
                        .HasColumnType("bit");

                    b.Property<bool>("DacTinh_Kho")
                        .HasColumnType("bit");

                    b.Property<bool>("DacTinh_TapChat")
                        .HasColumnType("bit");

                    b.Property<string>("DanhSachHinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi_DuongApThon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DonHangM_DonHang")
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("GiaTriMongMuon")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("M_DonViTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_KhachHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_LoaiSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_YeuCau")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaQuan")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaXa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanLyM_QuanLy")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SanPhamM_SanPham")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("M_ChiTiet");

                    b.HasIndex("DonHangM_DonHang");

                    b.HasIndex("M_DonViTinh");

                    b.HasIndex("M_KhachHang");

                    b.HasIndex("M_LoaiSP");

                    b.HasIndex("M_YeuCau");

                    b.HasIndex("MaQuan");

                    b.HasIndex("MaTinh");

                    b.HasIndex("MaXa");

                    b.HasIndex("QuanLyM_QuanLy");

                    b.HasIndex("SanPhamM_SanPham");

                    b.ToTable("ChiTietThuGoms");
                });

            modelBuilder.Entity("DACS.Models.DonHang", b =>
                {
                    b.Property<string>("M_DonHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("DaTruTonKho")
                        .HasColumnType("bit");

                    b.Property<string>("LyDoHoanTra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M_KhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_PhuongThuc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_VanDon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHoanTra")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaidathang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Tendathang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThaiHoanTra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("M_DonHang");

                    b.HasIndex("M_KhachHang");

                    b.HasIndex("M_PhuongThuc");

                    b.HasIndex("M_VanDon");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("DACS.Models.DonViTinh", b =>
                {
                    b.Property<string>("M_DonViTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenLoaiTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_DonViTinh");

                    b.ToTable("DonViTinhs");
                });

            modelBuilder.Entity("DACS.Models.GiamGia", b =>
                {
                    b.Property<string>("M_GiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("GiaTriDonHangToiThieu")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiGiamGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenGiamGia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Tien")
                        .HasColumnType("bigint");

                    b.HasKey("M_GiamGia");

                    b.ToTable("GiamGias");
                });

            modelBuilder.Entity("DACS.Models.HoanTra", b =>
                {
                    b.Property<string>("M_HoanTra")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("M_HoanTra");

                    b.ToTable("HoanTras");
                });

            modelBuilder.Entity("DACS.Models.KhachHang", b =>
                {
                    b.Property<string>("M_KhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiaChi_DuongApThon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email_KhachHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaQuan")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaXa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SDT_KhachHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Ten_KhachHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("M_KhachHang");

                    b.HasIndex("Id");

                    b.HasIndex("MaQuan");

                    b.HasIndex("MaTinh");

                    b.HasIndex("MaXa");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("DACS.Models.KhoHang", b =>
                {
                    b.Property<string>("MaKho")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SucChuaTomTat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenKho")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenLoaiKho")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaKho");

                    b.ToTable("KhoHangs");
                });

            modelBuilder.Entity("DACS.Models.LoaiSanPham", b =>
                {
                    b.Property<string>("M_LoaiSP")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_LoaiSP");

                    b.ToTable("LoaiSanPhams");
                });

            modelBuilder.Entity("DACS.Models.LoaiSanPhamGiamGia", b =>
                {
                    b.Property<string>("M_LoaiSP")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_GiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("M_LoaiSP", "M_GiamGia");

                    b.HasIndex("M_GiamGia");

                    b.ToTable("LoaiSanPhamGiamGias");
                });

            modelBuilder.Entity("DACS.Models.Owner", b =>
                {
                    b.Property<string>("M_QuanLy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("XacNhan")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("M_QuanLy");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("DACS.Models.PhieuXuat", b =>
                {
                    b.Property<int>("MaPhieuXuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuXuat"));

                    b.Property<string>("LyDoXuat")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MaKho")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiNhan")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaPhieuXuat");

                    b.HasIndex("MaKho");

                    b.ToTable("PhieuXuats");
                });

            modelBuilder.Entity("DACS.Models.PhuongThucThanhToan", b =>
                {
                    b.Property<string>("M_PhuongThuc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenPhuongThuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_PhuongThuc");

                    b.ToTable("PhuongThucThanhToans");
                });

            modelBuilder.Entity("DACS.Models.QuanHuyen", b =>
                {
                    b.Property<string>("MaQuan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenQuan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaQuan");

                    b.HasIndex("MaTinh");

                    b.ToTable("QuanHuyens");
                });

            modelBuilder.Entity("DACS.Models.QuanLy", b =>
                {
                    b.Property<string>("M_QuanLy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_DonHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_HoanTra")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("YeuCau")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("M_QuanLy");

                    b.HasIndex("M_DonHang");

                    b.HasIndex("M_HoanTra")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("QuanLys");
                });

            modelBuilder.Entity("DACS.Models.SanPham", b =>
                {
                    b.Property<string>("M_SanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AnhSanPham")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("Gia")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("HanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("M_DonViTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_LoaiSP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_SanPham");

                    b.HasIndex("M_DonViTinh");

                    b.HasIndex("M_LoaiSP");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("DACS.Models.SanPhamGiamGia", b =>
                {
                    b.Property<string>("M_SanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_GiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("M_SanPham", "M_GiamGia");

                    b.HasIndex("M_GiamGia");

                    b.ToTable("SanPhamGiamGias");
                });

            modelBuilder.Entity("DACS.Models.TinhThanhPho", b =>
                {
                    b.Property<string>("MaTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTinh");

                    b.ToTable("TinhThanhPhos");
                });

            modelBuilder.Entity("DACS.Models.TonKho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("KhoiLuong")
                        .HasColumnType("real");

                    b.Property<string>("M_DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M_LoaiSP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_SanPham")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaDonViTinh")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaKho")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("M_LoaiSP");

                    b.HasIndex("M_SanPham");

                    b.HasIndex("MaDonViTinh");

                    b.HasIndex("MaKho");

                    b.ToTable("TonKhos");
                });

            modelBuilder.Entity("DACS.Models.VanChuyen", b =>
                {
                    b.Property<string>("M_VanDon")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DonViVanChuyen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_VanDon");

                    b.ToTable("VanChuyens");
                });

            modelBuilder.Entity("DACS.Models.XaPhuong", b =>
                {
                    b.Property<string>("MaXa")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaQuan")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenXa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaXa");

                    b.HasIndex("MaQuan");

                    b.ToTable("XaPhuongs");
                });

            modelBuilder.Entity("DACS.Models.YeuCauThuGom", b =>
                {
                    b.Property<string>("M_YeuCau")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DonHangM_DonHang")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M_KhachHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_QuanLy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianHoanThanh")
                        .HasColumnType("datetime2")
                        .HasColumnName("Thoi_Gian_HT");

                    b.Property<DateTime>("ThoiGianSanSang")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("M_YeuCau");

                    b.HasIndex("DonHangM_DonHang");

                    b.HasIndex("M_KhachHang");

                    b.HasIndex("M_QuanLy");

                    b.ToTable("YeuCauThuGoms");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DACS.Models.ChiTietDanhGia", b =>
                {
                    b.HasOne("DACS.Models.KhachHang", "KhachHang")
                        .WithMany("ChiTietDanhGias")
                        .HasForeignKey("M_KhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.SanPham", "SanPham")
                        .WithMany("ChiTietDanhGias")
                        .HasForeignKey("M_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DACS.Models.ChiTietDatHang", b =>
                {
                    b.HasOne("DACS.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("M_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.KhachHang", "KhachHang")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("M_KhachHang");

                    b.HasOne("DACS.Models.SanPham", "SanPham")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("M_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DACS.Models.ChiTietHoanTra", b =>
                {
                    b.HasOne("DACS.Models.DonHang", "DonHang")
                        .WithMany("ChiTietHoanTras")
                        .HasForeignKey("M_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.HoanTra", "HoanTra")
                        .WithMany("ChiTietHoanTras")
                        .HasForeignKey("M_HoanTra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("HoanTra");
                });

            modelBuilder.Entity("DACS.Models.ChiTietLienHe", b =>
                {
                    b.HasOne("DACS.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("M_KhachHang");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("DACS.Models.ChiTietPhieuXuat", b =>
                {
                    b.HasOne("DACS.Models.DonViTinh", "DonViTinh")
                        .WithMany()
                        .HasForeignKey("M_DonViTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany()
                        .HasForeignKey("M_LoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.PhieuXuat", "PhieuXuat")
                        .WithMany("ChiTietPhieuXuats")
                        .HasForeignKey("MaPhieuXuat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViTinh");

                    b.Navigation("LoaiSanPham");

                    b.Navigation("PhieuXuat");
                });

            modelBuilder.Entity("DACS.Models.ChiTietThuGom", b =>
                {
                    b.HasOne("DACS.Models.DonHang", null)
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("DonHangM_DonHang");

                    b.HasOne("DACS.Models.DonViTinh", "DonViTinh")
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("M_DonViTinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("M_KhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany()
                        .HasForeignKey("M_LoaiSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS.Models.YeuCauThuGom", "YeuCauThuGom")
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("M_YeuCau")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS.Models.QuanHuyen", "QuanHuyen")
                        .WithMany()
                        .HasForeignKey("MaQuan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.TinhThanhPho", "TinhThanhPho")
                        .WithMany()
                        .HasForeignKey("MaTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.XaPhuong", "XaPhuong")
                        .WithMany()
                        .HasForeignKey("MaXa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.QuanLy", null)
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("QuanLyM_QuanLy");

                    b.HasOne("DACS.Models.SanPham", null)
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("SanPhamM_SanPham");

                    b.Navigation("DonViTinh");

                    b.Navigation("KhachHang");

                    b.Navigation("LoaiSanPham");

                    b.Navigation("QuanHuyen");

                    b.Navigation("TinhThanhPho");

                    b.Navigation("XaPhuong");

                    b.Navigation("YeuCauThuGom");
                });

            modelBuilder.Entity("DACS.Models.DonHang", b =>
                {
                    b.HasOne("DACS.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("M_KhachHang")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DACS.Models.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("DonHangs")
                        .HasForeignKey("M_PhuongThuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.VanChuyen", "VanChuyen")
                        .WithMany("DonHangs")
                        .HasForeignKey("M_VanDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("PhuongThucThanhToan");

                    b.Navigation("VanChuyen");
                });

            modelBuilder.Entity("DACS.Models.KhachHang", b =>
                {
                    b.HasOne("DACS.Models.ChiTietLienHe", "ChiTietLienHe")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.HasOne("DACS.Models.QuanHuyen", "QuanHuyen")
                        .WithMany()
                        .HasForeignKey("MaQuan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS.Models.TinhThanhPho", "TinhThanhPho")
                        .WithMany()
                        .HasForeignKey("MaTinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS.Models.XaPhuong", "XaPhuong")
                        .WithMany()
                        .HasForeignKey("MaXa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS.Models.ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("DACS.Models.KhachHang", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietLienHe");

                    b.Navigation("QuanHuyen");

                    b.Navigation("TinhThanhPho");

                    b.Navigation("User");

                    b.Navigation("XaPhuong");
                });

            modelBuilder.Entity("DACS.Models.LoaiSanPhamGiamGia", b =>
                {
                    b.HasOne("DACS.Models.GiamGia", "GiamGia")
                        .WithMany("LoaiSanPhamGiamGias")
                        .HasForeignKey("M_GiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany()
                        .HasForeignKey("M_LoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiamGia");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("DACS.Models.PhieuXuat", b =>
                {
                    b.HasOne("DACS.Models.KhoHang", "KhoHang")
                        .WithMany()
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoHang");
                });

            modelBuilder.Entity("DACS.Models.QuanHuyen", b =>
                {
                    b.HasOne("DACS.Models.TinhThanhPho", "TinhThanhPho")
                        .WithMany("QuanHuyens")
                        .HasForeignKey("MaTinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TinhThanhPho");
                });

            modelBuilder.Entity("DACS.Models.QuanLy", b =>
                {
                    b.HasOne("DACS.Models.DonHang", "DonHang")
                        .WithMany("QuanLyNhaps")
                        .HasForeignKey("M_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.HoanTra", "HoanTra")
                        .WithOne("QuanLyNhap")
                        .HasForeignKey("DACS.Models.QuanLy", "M_HoanTra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.Owner", "Owner")
                        .WithOne("QuanLy")
                        .HasForeignKey("DACS.Models.QuanLy", "M_QuanLy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("HoanTra");

                    b.Navigation("Owner");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DACS.Models.SanPham", b =>
                {
                    b.HasOne("DACS.Models.DonViTinh", "DonViTinh")
                        .WithMany("SanPhams")
                        .HasForeignKey("M_DonViTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("M_LoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViTinh");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("DACS.Models.SanPhamGiamGia", b =>
                {
                    b.HasOne("DACS.Models.GiamGia", "GiamGia")
                        .WithMany("SanPhamGiamGias")
                        .HasForeignKey("M_GiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("M_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiamGia");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DACS.Models.TonKho", b =>
                {
                    b.HasOne("DACS.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany()
                        .HasForeignKey("M_LoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("M_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.DonViTinh", "DonViTinh")
                        .WithMany()
                        .HasForeignKey("MaDonViTinh");

                    b.HasOne("DACS.Models.KhoHang", "KhoHang")
                        .WithMany()
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViTinh");

                    b.Navigation("KhoHang");

                    b.Navigation("LoaiSanPham");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DACS.Models.XaPhuong", b =>
                {
                    b.HasOne("DACS.Models.QuanHuyen", "QuanHuyen")
                        .WithMany("XaPhuongs")
                        .HasForeignKey("MaQuan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("QuanHuyen");
                });

            modelBuilder.Entity("DACS.Models.YeuCauThuGom", b =>
                {
                    b.HasOne("DACS.Models.DonHang", null)
                        .WithMany("YeuCauThuGoms")
                        .HasForeignKey("DonHangM_DonHang");

                    b.HasOne("DACS.Models.KhachHang", "KhachHang")
                        .WithMany("YeuCauThuGoms")
                        .HasForeignKey("M_KhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.ApplicationUser", "QuanLy")
                        .WithMany()
                        .HasForeignKey("M_QuanLy");

                    b.Navigation("KhachHang");

                    b.Navigation("QuanLy");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DACS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DACS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DACS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DACS.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDatHangs");

                    b.Navigation("ChiTietHoanTras");

                    b.Navigation("ChiTietThuGoms");

                    b.Navigation("QuanLyNhaps");

                    b.Navigation("YeuCauThuGoms");
                });

            modelBuilder.Entity("DACS.Models.DonViTinh", b =>
                {
                    b.Navigation("ChiTietThuGoms");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DACS.Models.GiamGia", b =>
                {
                    b.Navigation("LoaiSanPhamGiamGias");

                    b.Navigation("SanPhamGiamGias");
                });

            modelBuilder.Entity("DACS.Models.HoanTra", b =>
                {
                    b.Navigation("ChiTietHoanTras");

                    b.Navigation("QuanLyNhap")
                        .IsRequired();
                });

            modelBuilder.Entity("DACS.Models.KhachHang", b =>
                {
                    b.Navigation("ChiTietDanhGias");

                    b.Navigation("ChiTietDatHangs");

                    b.Navigation("YeuCauThuGoms");
                });

            modelBuilder.Entity("DACS.Models.LoaiSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DACS.Models.Owner", b =>
                {
                    b.Navigation("QuanLy")
                        .IsRequired();
                });

            modelBuilder.Entity("DACS.Models.PhieuXuat", b =>
                {
                    b.Navigation("ChiTietPhieuXuats");
                });

            modelBuilder.Entity("DACS.Models.PhuongThucThanhToan", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("DACS.Models.QuanHuyen", b =>
                {
                    b.Navigation("XaPhuongs");
                });

            modelBuilder.Entity("DACS.Models.QuanLy", b =>
                {
                    b.Navigation("ChiTietThuGoms");
                });

            modelBuilder.Entity("DACS.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietDanhGias");

                    b.Navigation("ChiTietDatHangs");

                    b.Navigation("ChiTietThuGoms");
                });

            modelBuilder.Entity("DACS.Models.TinhThanhPho", b =>
                {
                    b.Navigation("QuanHuyens");
                });

            modelBuilder.Entity("DACS.Models.VanChuyen", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("DACS.Models.YeuCauThuGom", b =>
                {
                    b.Navigation("ChiTietThuGoms");
                });
#pragma warning restore 612, 618
        }
    }
}
