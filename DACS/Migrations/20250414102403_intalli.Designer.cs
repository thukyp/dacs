// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DACS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250414102403_intalli")]
    partial class intalli
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ChiTietDanhGia", b =>
                {
                    b.Property<string>("M_NguoiMua")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_SanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTa_DanhGia")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("MucDoHaiLong")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.HasKey("M_NguoiMua", "M_SanPham");

                    b.HasIndex("M_SanPham");

                    b.ToTable("ChiTietDanhGias");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ChiTietDatHang", b =>
                {
                    b.Property<string>("M_SanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_DonHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("GiaDatHang")
                        .HasColumnType("bigint");

                    b.Property<string>("M_NguoiMua")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<long>("TongTien")
                        .HasColumnType("bigint");

                    b.HasKey("M_SanPham", "M_DonHang");

                    b.HasIndex("M_DonHang");

                    b.HasIndex("M_NguoiMua");

                    b.ToTable("ChiTietDatHangs");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ChiTietHoanTra", b =>
                {
                    b.Property<string>("M_HoanTra")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_DonHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("SoTienHoan")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TrangThaiSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("M_HoanTra", "M_DonHang");

                    b.HasIndex("M_DonHang");

                    b.ToTable("ChiTietHoanTras");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ChiTietThuGom", b =>
                {
                    b.Property<string>("M_YeuCau")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_NongDan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_DonViTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_QuanLy")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_SanPham")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("M_YeuCau", "M_NongDan");

                    b.HasIndex("M_DonViTinh");

                    b.HasIndex("M_NongDan");

                    b.HasIndex("M_QuanLy");

                    b.HasIndex("M_SanPham");

                    b.ToTable("ChiTietThuGoms");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.DonHang", b =>
                {
                    b.Property<string>("M_DonHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_PhuongThuc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_VanDon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("M_DonHang");

                    b.HasIndex("M_PhuongThuc");

                    b.HasIndex("M_VanDon");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.DonViTinh", b =>
                {
                    b.Property<string>("M_DonViTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenLoaiTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_DonViTinh");

                    b.ToTable("DonViTinhs");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.GiamGia", b =>
                {
                    b.Property<string>("M_GiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("GiaTriDonHangToiThieu")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiGiamGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenGiamGia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Tien")
                        .HasColumnType("bigint");

                    b.HasKey("M_GiamGia");

                    b.ToTable("GiamGias");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.HoanTra", b =>
                {
                    b.Property<string>("M_HoanTra")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("M_HoanTra");

                    b.ToTable("HoanTras");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.KhoLuuTru", b =>
                {
                    b.Property<string>("M_KhoLuuTru")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("HanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<long>("SoLuongTon")
                        .HasColumnType("bigint");

                    b.HasKey("M_KhoLuuTru");

                    b.ToTable("KhoLuuTrus");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.LoaiSanPham", b =>
                {
                    b.Property<string>("M_LoaiSP")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_LoaiSP");

                    b.ToTable("LoaiSanPhams");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.LoaiSanPhamGiamGia", b =>
                {
                    b.Property<string>("M_LoaiSP")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_GiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("M_LoaiSP", "M_GiamGia");

                    b.HasIndex("M_GiamGia");

                    b.ToTable("LoaiSanPhamGiamGias");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.NguoiMua", b =>
                {
                    b.Property<string>("M_NguoiMua")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DiaChi_NguoiMua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email_NguoiMua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT_NguoiMua")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten_NguoiMua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_NguoiMua");

                    b.ToTable("NguoiMuas");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.NongDan", b =>
                {
                    b.Property<string>("M_NongDan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DiaChi_NongDan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email_NongDan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT_NongDan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten_NongDan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_NongDan");

                    b.ToTable("NongDans");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.PhuongThucThanhToan", b =>
                {
                    b.Property<string>("M_PhuongThuc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenPhuongThuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_PhuongThuc");

                    b.ToTable("PhuongThucThanhToans");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.QuanLy", b =>
                {
                    b.Property<string>("M_QuanLy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("XacNhan")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("M_QuanLy");

                    b.ToTable("QuanLys");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.QuanLyNhap", b =>
                {
                    b.Property<string>("M_QuanLy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_DonHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_HoanTra")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("YeuCau")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("M_QuanLy");

                    b.HasIndex("M_DonHang");

                    b.HasIndex("M_HoanTra")
                        .IsUnique();

                    b.ToTable("QuanLyNhaps");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.SanPham", b =>
                {
                    b.Property<string>("M_SanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AnhSanPham")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("Gia")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("HanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("M_DonViTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_KhoLuuTru")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_LoaiSP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_SanPham");

                    b.HasIndex("M_DonViTinh");

                    b.HasIndex("M_KhoLuuTru");

                    b.HasIndex("M_LoaiSP");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.SanPhamGiamGia", b =>
                {
                    b.Property<string>("M_SanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_GiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("M_SanPham", "M_GiamGia");

                    b.HasIndex("M_GiamGia");

                    b.ToTable("SanPhamGiamGias");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ThanhToanNongDan", b =>
                {
                    b.Property<string>("M_ThanhToanNongDan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_NongDan")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("M_ThanhToanNongDan");

                    b.HasIndex("M_NongDan");

                    b.ToTable("ThanhToanNongDans");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.VanChuyen", b =>
                {
                    b.Property<string>("M_VanDon")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DonViVanChuyen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_VanDon");

                    b.ToTable("VanChuyens");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.YeuCauThuGom", b =>
                {
                    b.Property<string>("M_YeuCau")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("M_NongDan")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("M_YeuCau");

                    b.HasIndex("M_NongDan");

                    b.ToTable("YeuCauThuGoms");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ChiTietDanhGia", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.NguoiMua", "NguoiMua")
                        .WithMany("ChiTietDanhGias")
                        .HasForeignKey("M_NguoiMua")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.SanPham", "SanPham")
                        .WithMany("ChiTietDanhGias")
                        .HasForeignKey("M_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiMua");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ChiTietDatHang", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("M_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.NguoiMua", "NguoiMua")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("M_NguoiMua")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.SanPham", "SanPham")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("M_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("NguoiMua");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ChiTietHoanTra", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.DonHang", "DonHang")
                        .WithMany("ChiTietHoanTras")
                        .HasForeignKey("M_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.HoanTra", "HoanTra")
                        .WithMany("ChiTietHoanTras")
                        .HasForeignKey("M_HoanTra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("HoanTra");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ChiTietThuGom", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.DonViTinh", "DonViTinh")
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("M_DonViTinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.NongDan", "NongDan")
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("M_NongDan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.QuanLy", "QuanLy")
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("M_QuanLy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.SanPham", "SanPham")
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("M_SanPham")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.YeuCauThuGom", "YeuCauThuGom")
                        .WithMany("ChiTietThuGoms")
                        .HasForeignKey("M_YeuCau")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonViTinh");

                    b.Navigation("NongDan");

                    b.Navigation("QuanLy");

                    b.Navigation("SanPham");

                    b.Navigation("YeuCauThuGom");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.DonHang", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("DonHangs")
                        .HasForeignKey("M_PhuongThuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.VanChuyen", "VanChuyen")
                        .WithMany("DonHangs")
                        .HasForeignKey("M_VanDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhuongThucThanhToan");

                    b.Navigation("VanChuyen");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.LoaiSanPhamGiamGia", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.GiamGia", "GiamGia")
                        .WithMany("LoaiSanPhamGiamGias")
                        .HasForeignKey("M_GiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany()
                        .HasForeignKey("M_LoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiamGia");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.QuanLyNhap", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.DonHang", "DonHang")
                        .WithMany("QuanLyNhaps")
                        .HasForeignKey("M_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.HoanTra", "HoanTra")
                        .WithOne("QuanLyNhap")
                        .HasForeignKey("Đồ_án_cs.Models.QuanLyNhap", "M_HoanTra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.QuanLy", "QuanLy")
                        .WithOne("QuanLyNhap")
                        .HasForeignKey("Đồ_án_cs.Models.QuanLyNhap", "M_QuanLy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("HoanTra");

                    b.Navigation("QuanLy");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.SanPham", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.DonViTinh", "DonViTinh")
                        .WithMany("SanPhams")
                        .HasForeignKey("M_DonViTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.KhoLuuTru", "KhoLuuTru")
                        .WithMany("SanPhams")
                        .HasForeignKey("M_KhoLuuTru")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("M_LoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViTinh");

                    b.Navigation("KhoLuuTru");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.SanPhamGiamGia", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.GiamGia", "GiamGia")
                        .WithMany("SanPhamGiamGias")
                        .HasForeignKey("M_GiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Đồ_án_cs.Models.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("M_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiamGia");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.ThanhToanNongDan", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.NongDan", "NongDan")
                        .WithMany("ThanhToanNongDans")
                        .HasForeignKey("M_NongDan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NongDan");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.YeuCauThuGom", b =>
                {
                    b.HasOne("Đồ_án_cs.Models.NongDan", "NongDan")
                        .WithMany("YeuCauThuGoms")
                        .HasForeignKey("M_NongDan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NongDan");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDatHangs");

                    b.Navigation("ChiTietHoanTras");

                    b.Navigation("QuanLyNhaps");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.DonViTinh", b =>
                {
                    b.Navigation("ChiTietThuGoms");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.GiamGia", b =>
                {
                    b.Navigation("LoaiSanPhamGiamGias");

                    b.Navigation("SanPhamGiamGias");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.HoanTra", b =>
                {
                    b.Navigation("ChiTietHoanTras");

                    b.Navigation("QuanLyNhap")
                        .IsRequired();
                });

            modelBuilder.Entity("Đồ_án_cs.Models.KhoLuuTru", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.LoaiSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.NguoiMua", b =>
                {
                    b.Navigation("ChiTietDanhGias");

                    b.Navigation("ChiTietDatHangs");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.NongDan", b =>
                {
                    b.Navigation("ChiTietThuGoms");

                    b.Navigation("ThanhToanNongDans");

                    b.Navigation("YeuCauThuGoms");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.PhuongThucThanhToan", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.QuanLy", b =>
                {
                    b.Navigation("ChiTietThuGoms");

                    b.Navigation("QuanLyNhap")
                        .IsRequired();
                });

            modelBuilder.Entity("Đồ_án_cs.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietDanhGias");

                    b.Navigation("ChiTietDatHangs");

                    b.Navigation("ChiTietThuGoms");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.VanChuyen", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("Đồ_án_cs.Models.YeuCauThuGom", b =>
                {
                    b.Navigation("ChiTietThuGoms");
                });
#pragma warning restore 612, 618
        }
    }
}
