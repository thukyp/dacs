@model DACS.Areas.Owner.Models.RevenueReportPageViewModel
@{
    ViewData["Title"] = "Báo Cáo Doanh Thu";
    // Layout = "_AdminLayout"; // Tên Layout của bạn
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Admin</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <link rel="stylesheet" href="~/css/AdminLayout.css" asp-append-version="true" />
    @*<link rel="stylesheet" href="~/css/AdminRevenueReport.css" asp-append-version="true" />*@
    <style>
        body, html {
            height: 100%;
        }
                .container {
            display: grid;
            max-width: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            flex-direction: row;
        }

        .container-fluid.d-flex {
            height: 100%;
            padding: 0;
        }
        /* Sửa lại selector cho đúng */
        .sidebar {
            background-color: #212529;
            color: #fff;
            padding: 15px;
            width: 250px;
            flex-shrink: 0;
            min-height: 100vh;
        }

            .sidebar h2 {
                border-bottom: 1px solid #495057;
                padding-bottom: 10px;
                font-size: 1.5rem;
            }

            .sidebar .nav-link {
                color: #adb5bd;
                padding: 8px 15px;
            }

                .sidebar .nav-link.active, .sidebar .nav-link:hover {
                    color: #fff;
                    background-color: #495057;
                    border-radius: 0.25rem;
                }

        .main-content-area {
            padding: 25px;
            background-color: #f8f9fa;
            flex-grow: 1;
            overflow-y: auto;
        }

        .page-header {
            font-size: 1.75rem;
            font-weight: 500;
            margin-bottom: 1.5rem;
            color: #343a40;
        }

        .stat-card {
            background-color: #fff;
            border-radius: 0.375rem;
            padding: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            text-align: center;
        }

            .stat-card .value {
                font-size: 1.75rem;
                font-weight: 600;
                color: #198754;
            }

            .stat-card .label {
                font-size: 0.9rem;
                color: #6c757d;
                margin-top: 0.25rem;
            }

        .filter-card {
            background-color: #fff;
            padding: 1rem 1.5rem;
            border-radius: 0.375rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .chart-card {
            background-color: #fff;
            border-radius: 0.375rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

            .chart-card h5 {
                margin-bottom: 1rem;
                font-weight: 500;
                color: #495057;
            }

        .table-container {
            background-color: #fff;
            padding: 1.5rem;
            border-radius: 0.375rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            margin-top: 1.5rem;
        }

        .table th {
            font-weight: 600;
            background-color: #e9ecef;
        }

        .table td {
            vertical-align: middle;
            font-size: 0.9rem;
        }

        .currency {
            text-align: right;
            font-weight: 500;
        }

        .trend-up {
            color: #198754; /* green */
        }

        .trend-down {
            color: #dc3545; /* red */
        }

        .trend-neutral {
            color: #6c757d; /* gray */
        }

    </style>
</head>
<body>
    <div class="container-fluid d-flex p-0">
        <div class="sidebar">
            <h2>OWNER</h2>
            <ul class="nav flex-column">
                @* Điều chỉnh các asp-controller và asp-action cho phù hợp với cấu trúc của bạn *@
                <li class="nav-item"><a asp-area="Owner" asp-controller="Owner" asp-action="Index" class="nav-link"><i class="fas fa-tachometer-alt me-2"></i> Dashboard</a></li>
                <li class="nav-item"><a asp-area="Owner" asp-controller="DoanhThu" asp-action="Index" class="nav-link"><i class="fas fa-chart-line me-2"></i> Doanh thu</a></li>
                <li class="nav-item"><a asp-area="Owner" asp-controller="QuanLyND" asp-action="Index" class="nav-link"><i class="fas fa-users me-2"></i> Quản lý Tài khoản</a></li>
                <li class="nav-item"><a asp-area="Owner" asp-controller="QuanLySP" asp-action="Index" class="nav-link"><i class="fas fa-box-open me-2"></i> Quản lý Sản phẩm</a></li>
                <li class="nav-item"><a asp-area="Owner" asp-controller="QuanLyXNK" asp-action="Index" class="nav-link"><i class="fas fa-truck-loading me-2"></i> Quản lý Thu gom</a></li>
                <li class="nav-item"><a asp-area="Owner" asp-controller="QuanLyDonHang" asp-action="Index" class="nav-link active"><i class="fas fa-receipt me-2"></i> Quản lý Đơn Hàng</a></li>
                <li class="nav-item"><a href="#" class="nav-link"><i class="fas fa-cog me-2"></i> Cài đặt</a></li>
                <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm_sidebar_index" class="mt-3">
                    @* Moved mt-3 to form *@
                    <button type="submit" class="list-group-item list-group-item-action text-danger border-0 bg-transparent p-0 w-100 text-start">
                        @* Adjusted button style to better match list items *@
                        <span class="list-group-item list-group-item-action border-0 text-danger"><i class="fas fa-sign-out-alt fa-fw me-2"></i> Đăng xuất</span>
                    </button>
                </form>
            </ul>
        </div>

        <div class="main-content-area">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="page-header mb-0">@ViewData["Title"] <small class="text-muted fs-6">(@Model.DisplayDateRangeText)</small></div>
                <div>
                    @* TODO: Nút Xuất Báo Cáo sẽ trỏ đến action ExportReport *@
                    @* <a asp-action="ExportReport"
                       asp-route-selectedDateRangePreset="@Model.SelectedDateRangePreset"
                       asp-route-customDateFrom="@Model.CustomDateFrom?.ToString("yyyy-MM-dd")"
                       asp-route-customDateTo="@Model.CustomDateTo?.ToString("yyyy-MM-dd")"
                       class="btn btn-sm btn-outline-secondary"><i class="fas fa-download me-1"></i> Xuất Báo Cáo</a> *@
                    <button class="btn btn-sm btn-outline-secondary" onclick="alert('Chức năng Xuất Báo Cáo chưa được triển khai.')"><i class="fas fa-download me-1"></i> Xuất Báo Cáo</button>
                </div>
            </div>

            <div class="filter-card">
                <form method="get" asp-action="Index">
                    <div class="row g-3 align-items-end">
                        @* align-items-end để nút Xem thẳng hàng với input dưới cùng *@
                        <div class="col-md-auto">
                            <label for="dateRangePreset" class="form-label form-label-sm mb-0">Xem theo:</label>
                        </div>
                        <div class="col-md-3 col-lg-2">
                            @* Điều chỉnh lại kích thước cột *@
                            <select id="dateRangePreset" name="selectedDateRangePreset" class="form-select form-select-sm" asp-items="@Model.DateRangePresetOptions">
                            </select>
                        </div>
                        <div class="col-md-3 col-lg-2">
                            <label for="date-from-filter" class="form-label form-label-sm visually-hidden">Từ ngày</label>
                            <input type="date" id="date-from-filter" name="customDateFrom" class="form-control form-control-sm" title="Từ ngày (Tùy chỉnh)" style="display: none;" value="@Model.CustomDateFrom?.ToString("yyyy-MM-dd")">
                        </div>
                        <div class="col-md-3 col-lg-2">
                            <label for="date-to-filter" class="form-label form-label-sm visually-hidden">Đến ngày</label>
                            <input type="date" id="date-to-filter" name="customDateTo" class="form-control form-control-sm" title="Đến ngày (Tùy chỉnh)" style="display: none;" value="@Model.CustomDateTo?.ToString("yyyy-MM-dd")">
                        </div>
                        <div class="col-md-auto mt-3 mt-md-0">
                            @* Margin top cho mobile, reset cho desktop *@
                            <button type="submit" class="btn btn-sm btn-primary"><i class="fas fa-eye me-1"></i> Xem báo cáo</button>
                        </div>
                    </div>
                </form>
            </div>

            <div class="row">
                <div class="col-lg-3 col-md-6">
                    <div class="stat-card">
                        <div class="value">@Model.TotalRevenue.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) đ</div>
                        <div class="label">Tổng Doanh Thu</div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="stat-card">
                        <div class="value text-primary">@Model.TotalOrders</div>
                        <div class="label">Tổng Đơn Hàng</div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="stat-card">
                        <div class="value text-secondary">@Model.AveragePerOrder.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) đ</div>
                        <div class="label">Trung bình/Đơn hàng</div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="stat-card">
                        <div class="value @(Model.RevenueChangeTrend == "up" ? "text-success" : (Model.RevenueChangeTrend == "down" ? "text-danger" : "text-secondary"))">
                            @if (Model.RevenueChangeTrend == "up")
                            {
                                <i class="fas fa-arrow-up"></i>
                            }
                            @if (Model.RevenueChangeTrend == "down")
                            {
                                <i class="fas fa-arrow-down"></i>
                            }
                            @Model.RevenueChangePercentage.ToString("0.##")%
                        </div>
                        <div class="label">So với kỳ trước</div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-8 mb-4 mb-lg-0">
                    <div class="chart-card h-100">
                        <h5>Doanh thu theo thời gian (@Model.DisplayDateRangeText)</h5>
                        @if (Model.RevenueOverTimeData != null && Model.RevenueOverTimeData.Any())
                        {
                            <canvas id="revenueOverTimeChart"></canvas>
                        }
                        else
                        {
                            <p class="text-center text-muted mt-5">Không có dữ liệu doanh thu trong khoảng thời gian này.</p>
                        }
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="chart-card h-100">
                        <h5>Doanh thu theo loại phụ phẩm</h5>
                        @if (Model.RevenueByCategoryData != null && Model.RevenueByCategoryData.Any())
                        {
                            <canvas id="revenueByCategoryChart"></canvas>
                        }
                        else
                        {
                            <p class="text-center text-muted mt-5">Không có dữ liệu doanh thu theo loại.</p>
                        }
                    </div>
                </div>
            </div>

            <div class="table-container">
                <h5 class="mb-3">Doanh thu chi tiết theo ngày (@Model.DisplayDateRangeText)</h5>
                <div class="table-responsive">
                    <table class="table table-sm table-bordered table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Ngày</th>
                                <th class="text-center">Số đơn hàng</th>
                                <th class="text-end">Doanh thu</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.DailyRevenueDetails != null && Model.DailyRevenueDetails.Any())
                            {
                                foreach (var item in Model.DailyRevenueDetails)
                                {
                                    <tr>
                                        <td>@item.Date.ToString("dd/MM/yyyy")</td>
                                        <td class="text-center">@item.OrderCount</td>
                                        <td class="currency">@item.RevenueAmount.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) đ</td>
                                    </tr>
                                }
                                <tr class="table-light fw-bold">
                                    <td colspan="1" class="text-end">Tổng cộng:</td>
                                    <td class="text-center">@Model.SumTotalDetailedOrders</td>
                                    <td class="currency">@Model.SumTotalDetailedRevenue.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) đ</td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td colspan="3" class="text-center text-muted">Không có dữ liệu chi tiết cho khoảng thời gian này.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const dateRangePresetEl = document.getElementById('dateRangePreset');
            const dateFromFilterEl = document.getElementById('date-from-filter');
            const dateToFilterEl = document.getElementById('date-to-filter');

            function toggleCustomDateInputs() {
                if (dateRangePresetEl.value === 'custom') {
                    dateFromFilterEl.style.display = 'block';
                    dateFromFilterEl.previousElementSibling.classList.remove('visually-hidden'); // Show label
                    dateToFilterEl.style.display = 'block';
                    dateToFilterEl.previousElementSibling.classList.remove('visually-hidden'); // Show label

                } else {
                    dateFromFilterEl.style.display = 'none';
                    dateFromFilterEl.previousElementSibling.classList.add('visually-hidden'); // Hide label
                    dateToFilterEl.style.display = 'none';
                    dateToFilterEl.previousElementSibling.classList.add('visually-hidden'); // Hide label
                }
            }

            if (dateRangePresetEl) {
                dateRangePresetEl.addEventListener('change', toggleCustomDateInputs);
                // Initial check
                toggleCustomDateInputs();
            }

            // --- Biểu đồ Doanh thu theo thời gian ---
            const revenueOverTimeLabels = @Html.Raw(Json.Serialize(Model.RevenueOverTimeLabels));
            const revenueOverTimeData = @Html.Raw(Json.Serialize(Model.RevenueOverTimeData));
            const ctxRevenueTime = document.getElementById('revenueOverTimeChart');

            if (ctxRevenueTime && revenueOverTimeData && revenueOverTimeData.length > 0) {
                new Chart(ctxRevenueTime, {
                    type: 'line',
                    data: {
                        labels: revenueOverTimeLabels,
                        datasets: [{
                            label: 'Doanh thu (VNĐ)',
                            data: revenueOverTimeData,
                            borderColor: 'rgb(75, 192, 192)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            tension: 0.1,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: { beginAtZero: true, ticks: { callback: function(value) { return value.toLocaleString('vi-VN') + ' đ'; } } },
                            x: { ticks: { autoSkip: true, maxTicksLimit: 15 } } // Giảm số lượng nhãn nếu quá nhiều
                        },
                        plugins: { tooltip: { callbacks: { label: function(context) { return context.dataset.label + ': ' + context.parsed.y.toLocaleString('vi-VN') + ' đ'; } } } }
                    }
                });
            }

            // --- Biểu đồ Doanh thu theo loại phụ phẩm ---
            const revenueByCategoryLabels = @Html.Raw(Json.Serialize(Model.RevenueByCategoryLabels));
            const revenueByCategoryData = @Html.Raw(Json.Serialize(Model.RevenueByCategoryData));
            const revenueByCategoryColors = @Html.Raw(Json.Serialize(Model.RevenueByCategoryColors));
            const ctxRevenueCategory = document.getElementById('revenueByCategoryChart');

            if (ctxRevenueCategory && revenueByCategoryData && revenueByCategoryData.length > 0) {
                new Chart(ctxRevenueCategory, {
                    type: 'pie',
                    data: {
                        labels: revenueByCategoryLabels,
                        datasets: [{
                            label: 'Doanh thu theo loại',
                            data: revenueByCategoryData,
                            backgroundColor: revenueByCategoryColors.length > 0 ? revenueByCategoryColors : [ // Fallback colors
                                'rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)',
                                'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)',
                                'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)'
                            ],
                            hoverOffset: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false, // Cho phép biểu đồ thay đổi kích thước không theo tỷ lệ gốc
                         plugins: { tooltip: { callbacks: { label: function(context) { let label = context.label || ''; if (label) { label += ': '; } if (context.parsed !== null) { label += context.parsed.toLocaleString('vi-VN') + ' đ'; } return label; } } } }
                    }
                });
            }
        });
    </script>
</body>
</html>