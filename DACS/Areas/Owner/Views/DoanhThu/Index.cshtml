@model DACS.Areas.Owner.Models.RevenueReportPageViewModel
@{
	ViewData["Title"] = "Báo Cáo Doanh Thu";
	// Layout = "_AdminLayout"; // Tên Layout của bạn
}

<!DOCTYPE html>
<html lang="vi">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - Admin</title>

	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

	<link rel="stylesheet" href="~/css/AdminLayout.css" asp-append-version="true" />
	@*<link rel="stylesheet" href="~/css/AdminRevenueReport.css" asp-append-version="true" />*@
	<style>
		/* Basic CSS - move to external files if possible */
		/* Basic CSS - move to external files if possible */
		body, html {
			height: 100%;
			font-size: 16px; /* hoặc 1rem */
			font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		}

		.container {
			display: flex;
			flex-direction: row;
			max-width: 100%;
			width: 100%;
			margin: 0;
			padding: 0;
		}

		.sidebar {
			background-color: #212529;
			color: #fff;
			padding: 15px;
			width: 250px;
			flex-shrink: 0;
			min-height: 100vh;
			display: flex;
			flex-direction: column;
		}

			.sidebar h2 { 
				border-bottom: 1px solid #495057;
				padding-bottom: 10px;
				font-size: 1.98rem;
				margin-bottom: 1rem;
				font-weight: 600;
			}

			.sidebar .nav {
				flex-grow: 1;
			}

			.sidebar .nav-link {
				color: #adb5bd;
				padding: 8px 15px;
				border-radius: 0.25rem;
				margin-bottom: 5px;
				font-size: 0.9rem;
			}

				.sidebar .nav-link.active, .sidebar .nav-link:hover {
					color: #fff;
					background-color: #495057;
				}

			.sidebar .nav-item.mt-auto {
				margin-top: auto;
				border-top: 1px solid #495057;
				padding-top: 15px;
			}

			.sidebar .logout-form button {
				padding: 8px 15px;
				color: #dc3545;
				background: none;
				border: none;
				width: 100%;
				text-align: left;
				font-size: 0.9rem;
			}

				.sidebar .logout-form button:hover {
					background-color: rgba(220, 53, 69, 0.1);
					color: #bd2130;
				}

		.main-content-area {
			padding: 25px;
			background-color: #f8f9fa;
			flex-grow: 1;
			overflow-y: auto;
			min-width: 0; /* Quan trọng: Cho phép flex item này co lại nếu nội dung quá rộng */
		}

		.stat-card {
			background-color: #fff;
			border-radius: 0.375rem;
			padding: 15px;
			margin-bottom: 1rem;
			box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
			text-align: center;
		}

			.stat-card .value {
				font-size: 1.5rem;
				font-weight: 600;
			}

			.stat-card .label {
				font-size: 0.9rem;
				color: #6c757d;
			}

		.filter-card {
			background-color: #fff;
			padding: 15px;
			border-radius: 0.375rem;
			margin-bottom: 1.5rem;
			box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
		}

		.table th {
			font-weight: 600;
			font-size: 0.85rem;
		}

		.table td {
			font-size: 0.85rem;
			vertical-align: middle;
		}

			.table td.currency {
				text-align: right;
			}

		.table .actions form, .table .actions a, .table .actions button {
			margin-right: 3px;
			display: inline-block;
		}

		.table .actions .btn-sm {
			padding: 0.2rem 0.4rem;
			font-size: 0.75rem;
		}

		.table .badge {
			font-size: 0.75rem;
			padding: 0.3em 0.5em;
		}

		.user-display span {
			display: block;
		}

		.user-display small {
			color: #6c757d;
			font-size: 0.9em;
		}

		.chart-card {
			background-color: #fff;
			padding: 15px;
			border-radius: 0.375rem;
			box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);
			/* height: 100%; đã có class h-100 trong HTML */
		}

		.table-container {
			max-height: 500px;
			overflow-y: auto;
			background-color: #fff;
			padding: 15px;
			border-radius: 0.375rem;
			margin-top: 1.5rem;
			box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);
		}
	</style>
</head>
<body>


	@* --- Main Layout Container --- *@
	<div class="d-flex">
		@* --- Sidebar --- *@
		<div class="sidebar">
			<h2>OWNER</h2> @* Sidebar h4 trong CSS, nhưng HTML là h2 *@
			<ul class="nav flex-column">
				@* Điều chỉnh các asp-controller và asp-action cho phù hợp với cấu trúc của bạn *@
				<li class="nav-item"><a asp-area="Owner" asp-controller="Owner" asp-action="Index" class="nav-link"><i class="fas fa-tachometer-alt me-2"></i> Dashboard</a></li>
				<li class="nav-item"><a asp-area="Owner" asp-controller="DoanhThu" asp-action="Index" class="nav-link active"><i class="fas fa-chart-line me-2"></i> Doanh thu</a></li>
				<li class="nav-item"><a asp-area="Owner" asp-controller="QuanLyND" asp-action="Index" class="nav-link"><i class="fas fa-users me-2"></i> Quản lý Tài khoản</a></li>
				<li class="nav-item"><a asp-area="Owner" asp-controller="QuanLySP" asp-action="Index" class="nav-link"><i class="fas fa-box-open me-2"></i> Quản lý Sản phẩm</a></li>
				<li class="nav-item"><a asp-area="Owner" asp-controller="QuanLyXNK" asp-action="Index" class="nav-link"><i class="fas fa-truck-loading me-2"></i> Quản lý Thu gom</a></li>
				<li class="nav-item"><a asp-area="Owner" asp-controller="QuanLyDonHang" asp-action="Index" class="nav-link "><i class="fas fa-receipt me-2"></i> Quản lý Đơn Hàng</a></li>
				<li class="nav-item"><a asp-area="Owner" asp-controller="QuanLyThanhToan" asp-action="Index" class="nav-link"><i class="fas fa-credit-card me-2"></i> Quản lý Thanh toán</a></li>


			</ul>
			<div class="nav-item mt-auto ">
				<button type="submit" class="text-danger border-0 bg-transparent p-0 w-100 text-start mt-1">
					@* Adjusted button style to better match list items *@
					<a href="/home/index" class="border-0 text-danger" style="text-decoration: none;"><i class="fas fa-sign-out-alt fa-fw me-2"></i> Về trang chủ</a>
				</button>
			</div>
		</div>

		<div class="main-content-area">
			<div class="d-flex justify-content-between align-items-center mb-4">
				<div class="page-header mb-0">@ViewData["Title"] <small class="text-muted fs-6">(@Model.DisplayDateRangeText)</small></div>
				<div>
					<button class="btn btn-sm btn-outline-secondary" onclick="alert('Chức năng Xuất Báo Cáo chưa được triển khai.')"><i class="fas fa-download me-1"></i> Xuất Báo Cáo</button>
				</div>
			</div>

			<div class="filter-card">
				<form method="get" asp-action="Index">
					<div class="row g-3 align-items-end">
						@* align-items-end để nút Xem thẳng hàng với input dưới cùng *@
						<div class="col-md-auto">
							<label for="dateRangePreset" class="form-label form-label-sm mb-0">Xem theo:</label>
						</div>
						<div class="col-md-3 col-lg-2">
							@* Điều chỉnh lại kích thước cột *@
							<select id="dateRangePreset" name="selectedDateRangePreset" class="form-select form-select-sm" asp-items="@Model.DateRangePresetOptions">
							</select>
						</div>
						<div class="col-md-3 col-lg-2">
							<label for="date-from-filter" class="form-label form-label-sm visually-hidden">Từ ngày</label>
							<input type="date" id="date-from-filter" name="customDateFrom" class="form-control form-control-sm" title="Từ ngày (Tùy chỉnh)" style="display: none;" value="@Model.CustomDateFrom?.ToString("yyyy-MM-dd")">
						</div>
						<div class="col-md-3 col-lg-2">
							<label for="date-to-filter" class="form-label form-label-sm visually-hidden">Đến ngày</label>
							<input type="date" id="date-to-filter" name="customDateTo" class="form-control form-control-sm" title="Đến ngày (Tùy chỉnh)" style="display: none;" value="@Model.CustomDateTo?.ToString("yyyy-MM-dd")">
						</div>
						<div class="col-md-auto mt-3 mt-md-0">
							@* Margin top cho mobile, reset cho desktop *@
							<button type="submit" class="btn btn-sm btn-primary"><i class="fas fa-eye me-1"></i> Xem báo cáo</button>
						</div>
					</div>
				</form>
			</div>

			<div class="row">
				<div class="col-lg-3 col-md-6">
					<div class="stat-card">
						<div class="value">@Model.TotalRevenue.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) đ</div>
						<div class="label">Tổng Doanh Thu</div>
					</div>
				</div>
				<div class="col-lg-3 col-md-6">
					<div class="stat-card">
						<div class="value text-primary">@Model.TotalOrders</div>
						<div class="label">Tổng Đơn Hàng</div>
					</div>
				</div>
				<div class="col-lg-3 col-md-6">
					<div class="stat-card">
						<div class="value text-secondary">@Model.AveragePerOrder.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) đ</div>
						<div class="label">Trung bình/Đơn hàng</div>
					</div>
				</div>
				<div class="col-lg-3 col-md-6">
					<div class="stat-card">
						<div class="value @(Model.RevenueChangeTrend == "up" ? "text-success" : (Model.RevenueChangeTrend == "down" ? "text-danger" : "text-secondary"))">
							@if (Model.RevenueChangeTrend == "up")
							{
								<i class="fas fa-arrow-up"></i>
							}
							@if (Model.RevenueChangeTrend == "down")
							{
								<i class="fas fa-arrow-down"></i>
							}
							@Model.RevenueChangePercentage.ToString("0.##")%
						</div>
						<div class="label">So với kỳ trước</div>
					</div>
				</div>
			</div>

			<div class="row">
				<div class="col-lg-8 mb-4 mb-lg-0">
					<div class="chart-card h-100">
						<h5>Doanh thu theo thời gian (@Model.DisplayDateRangeText)</h5>
						@if (Model.RevenueOverTimeData != null && Model.RevenueOverTimeData.Any())
						{
							<div class="chart-container">
								@* THÊM DÒNG NÀY *@
								<canvas id="revenueOverTimeChart"></canvas>
							</div> @* VÀ DÒNG NÀY *@
						}
						else
						{
							<p class="text-center text-muted mt-5">Không có dữ liệu doanh thu trong khoảng thời gian này.</p>
						}
					</div>
				</div>
				<div class="col-lg-4">
					<div class="chart-card h-100">
						<h5>Doanh thu theo loại phụ phẩm</h5>
						@if (Model.RevenueByCategoryData != null && Model.RevenueByCategoryData.Any())
						{
							<div class="chart-container">
								@* THÊM DÒNG NÀY *@
								<canvas id="revenueByCategoryChart"></canvas>
							</div> @* VÀ DÒNG NÀY *@
						}
						else
						{
							<p class="text-center text-muted mt-5">Không có dữ liệu doanh thu theo loại.</p>
						}
					</div>
				</div>
			</div>

				<div class="table-container">
					<h5 class="mb-3">Doanh thu chi tiết theo ngày (@Model.DisplayDateRangeText)</h5>

					<div class="table-responsive">
						<table class="table table-sm table-bordered table-hover">
							<thead class="table-light">
								<tr>
									<th>Ngày</th>
									<th class="text-center">Số đơn hàng</th>
									<th class="text-end">Doanh thu</th>
								</tr>
							</thead>
							<tbody>
								@if (Model.DailyRevenueDetails != null && Model.DailyRevenueDetails.Any())
								{
									foreach (var item in Model.DailyRevenueDetails)
									{
										<tr>
											<td>@item.Date.ToString("dd/MM/yyyy")</td>
											<td class="text-center">@item.OrderCount</td>
											<td class="currency">@item.RevenueAmount.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) đ</td>
										</tr>
									}
									<tr class="table-light fw-bold">
										<td colspan="1" class="text-end">Tổng cộng:</td>
										<td class="text-center">@Model.SumTotalDetailedOrders</td>
										<td class="currency">@Model.SumTotalDetailedRevenue.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) đ</td>
									</tr>
								}
								else
								{
									<tr>
										<td colspan="3" class="text-center text-muted">Không có dữ liệu chi tiết cho khoảng thời gian này.</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

		<script>
			document.addEventListener('DOMContentLoaded', function () {
				const dateRangePresetEl = document.getElementById('dateRangePreset');
				const dateFromFilterEl = document.getElementById('date-from-filter');
				const dateToFilterEl = document.getElementById('date-to-filter');

				function toggleCustomDateInputs() {
					if (dateRangePresetEl.value === 'custom') {
						dateFromFilterEl.style.display = 'block';
						// Kiểm tra sự tồn tại của previousElementSibling trước khi truy cập classList
						if(dateFromFilterEl.previousElementSibling) {
							dateFromFilterEl.previousElementSibling.classList.remove('visually-hidden'); // Show label
						}
						dateToFilterEl.style.display = 'block';
						if(dateToFilterEl.previousElementSibling) {
							dateToFilterEl.previousElementSibling.classList.remove('visually-hidden'); // Show label
						}

					} else {
						dateFromFilterEl.style.display = 'none';
						if(dateFromFilterEl.previousElementSibling) {
							dateFromFilterEl.previousElementSibling.classList.add('visually-hidden'); // Hide label
						}
						dateToFilterEl.style.display = 'none';
						if(dateToFilterEl.previousElementSibling) {
							dateToFilterEl.previousElementSibling.classList.add('visually-hidden'); // Hide label
						}
					}
				}

				if (dateRangePresetEl) {
					dateRangePresetEl.addEventListener('change', toggleCustomDateInputs);
					// Initial check
					toggleCustomDateInputs();
				}

				// --- Biểu đồ Doanh thu theo thời gian ---
				const revenueOverTimeLabels = @Html.Raw(Json.Serialize(Model.RevenueOverTimeLabels ?? new List<string>()));
				const revenueOverTimeData = @Html.Raw(Json.Serialize(Model.RevenueOverTimeData ?? new List<decimal>()));
				const ctxRevenueTime = document.getElementById('revenueOverTimeChart');

				if (ctxRevenueTime && revenueOverTimeData && revenueOverTimeData.length > 0) {
					new Chart(ctxRevenueTime, {
						type: 'line',
						data: {
							labels: revenueOverTimeLabels,
							datasets: [{
								label: 'Doanh thu (VNĐ)',
								data: revenueOverTimeData,
								borderColor: 'rgb(75, 192, 192)',
								backgroundColor: 'rgba(75, 192, 192, 0.2)',
								tension: 0.1,
								fill: true
							}]
						},
						options: {
							responsive: true,
							maintainAspectRatio: false,
							scales: {
								y: { beginAtZero: true, ticks: { callback: function(value) { return value.toLocaleString('vi-VN') + ' đ'; } } },
								x: { ticks: { autoSkip: true, maxTicksLimit: 15 } } // Giảm số lượng nhãn nếu quá nhiều
							},
							plugins: { tooltip: { callbacks: { label: function(context) { return context.dataset.label + ': ' + context.parsed.y.toLocaleString('vi-VN') + ' đ'; } } } }
						}
					});
				}

				// --- Biểu đồ Doanh thu theo loại phụ phẩm ---
				const revenueByCategoryLabels = @Html.Raw(Json.Serialize(Model.RevenueByCategoryLabels ?? new List<string>()));
				const revenueByCategoryData = @Html.Raw(Json.Serialize(Model.RevenueByCategoryData ?? new List<decimal>()));
				const revenueByCategoryColors = @Html.Raw(Json.Serialize(Model.RevenueByCategoryColors ?? new List<string>()));
				const ctxRevenueCategory = document.getElementById('revenueByCategoryChart');

				if (ctxRevenueCategory && revenueByCategoryData && revenueByCategoryData.length > 0) {
					new Chart(ctxRevenueCategory, {
						type: 'pie',
						data: {
							labels: revenueByCategoryLabels,
							datasets: [{
								label: 'Doanh thu theo loại',
								data: revenueByCategoryData,
								backgroundColor: revenueByCategoryColors.length > 0 ? revenueByCategoryColors : [ // Fallback colors
									'rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)',
									'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)',
									'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)'
								],
								hoverOffset: 4
							}]
						},
						options: {
							responsive: true,
							maintainAspectRatio: false,
							plugins: { tooltip: { callbacks: { label: function(context) { let label = context.label || ''; if (label) { label += ': '; } if (context.parsed !== null) { label += context.parsed.toLocaleString('vi-VN') + ' đ'; } return label; } } } }
						}
					});
				}
			});
		</script>
</body>
</html>