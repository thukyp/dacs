@model IEnumerable<DACS.Models.SanPham>
@using DACS.Models 

@{
    ViewData["Title"] = "Quản Lý Sản Phẩm";
    // Layout = "_AdminLayout"; // Đặt Layout nếu bạn có layout riêng
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <style>
        /* CSS của bạn giữ nguyên ở đây */
        body, html {
            height: 100%;
        }

        .container {
            display: grid;
            max-width: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            flex-direction: row;
        }


        .table td {
            vertical-align: middle;
            font-size: 0.9rem;
        }

        .table th {
            font-weight: 600;
            background-color: #e9ecef;
            white-space: nowrap;
            vertical-align: middle;
        }

        .actions a, .actions button {
            margin-right: 5px;
            font-size: 0.85rem;
        }

        .actions .btn-sm {
            padding: 0.2rem 0.4rem;
        }

        .main-content-area {
            padding: 25px;
            background-color: #f8f9fa;
            flex-grow: 1;
            overflow-y: auto;
            min-height: 100vh; /* Đảm bảo nội dung đủ cao */
        }

        .sidebar {
            background-color: #212529;
            color: #fff;
            padding: 15px;
            width: 250px;
            flex-shrink: 0;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

            .sidebar h4 {
                border-bottom: 1px solid #495057;
                padding-bottom: 10px;
                font-size: 1.25rem;
                margin-bottom: 1rem;
                font-weight: 600;
            }

            .sidebar .nav {
                flex-grow: 1;
            }

            .sidebar .nav-link {
                color: #adb5bd;
                padding: 8px 15px;
                border-radius: 0.25rem;
                margin-bottom: 5px;
                font-size: 0.9rem;
            }

                .sidebar .nav-link.active, .sidebar .nav-link:hover {
                    color: #fff;
                    background-color: #495057;
                }

            .sidebar .nav-item.mt-auto {
                margin-top: auto;
                border-top: 1px solid #495057;
                padding-top: 15px;
            }

            .sidebar .logout-form button {
                padding: 8px 15px;
                color: #dc3545;
                background: none;
                border: none;
                width: 100%;
                text-align: left;
                font-size: 0.9rem;
            }

                .sidebar .logout-form button:hover {
                    background-color: rgba(220, 53, 69, 0.1);
                    color: #bd2130;
                }

        .stat-card {
            background-color: #fff;
            border-radius: 0.375rem;
            padding: 15px;
            margin-bottom: 1rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            text-align: center;
        }

            .stat-card .value {
                font-size: 1.5rem;
                font-weight: 600;
            }

            .stat-card .label {
                font-size: 0.9rem;
                color: #6c757d;
            }
        /* Thêm CSS nếu cần */
    </style>
</head>
<body>
    <div class="d-flex">
        <div class="sidebar">
            <h2>Quản Lý SP</h2>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a asp-area="QuanLySP" asp-controller="QuanLySP" asp-action="Index" class="nav-link active">
                        <i class="fas fa-box-open me-2"></i> Quản lý Sản phẩm
                    </a>
                </li>


			</ul>
            <div class="nav-item mt-auto ">
            <button type="submit" class="list-group-item list-group-item-action text-danger border-0 bg-transparent p-0 w-100 text-start mt-1">
				@* Adjusted button style to better match list items *@
				<a href="/home/index" class="list-group-item list-group-item-action border-0 text-danger"><i class="fas fa-sign-out-alt fa-fw me-2"></i> Về trang chủ</a>
			</button>
            </div>
        </div>

        <div class="main-content-area">
            <div class="page-header">Quản Lý Sản Phẩm</div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @* <div class="row" id="stat-cards"> *@
            @*     <div class="col-md-4"> *@
            @*         <div class="stat-card"> *@
            @*             <div class="value" id="total-products">@(ViewBag.TotalProducts ?? Model.Count())</div> *@
            @*             <div class="label">Tổng sản phẩm</div> *@
            @*         </div> *@
            @*     </div> *@
            @*     <div class="col-md-4"> *@
            @*         <div class="stat-card"> *@
            @*             @(ViewBag.InStockProducts ?? Model.Count(p => p.SoLuong > 0)) *@
            @*             <div class="label">Sản phẩm còn hàng</div> *@
            @*         </div> *@
            @*     </div> *@
            @*     <div class="col-md-4"> *@
            @*         <div class="stat-card"> *@
            @*             @(ViewBag.InStockProducts ?? Model.Count(p => p.SoLuong > 0)) *@
            @*             <div class="label">Sản phẩm hết hàng</div> *@
            @*         </div> *@
            @*     </div> *@
            @* </div> *@


            <div class="row" id="stat-cards">
                <div class="col-md-4">
                    <div class="stat-card">
                        <div class="value" id="total-products">0</div>
                        <div class="label">Tổng sản phẩm</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="stat-card">
                        <div class="value text-success" id="in-stock-products">0</div>
                        <div class="label">Sản phẩm còn hàng</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="stat-card">
                        <div class="value text-danger" id="out-stock-products">0</div>
                        <div class="label">Sản phẩm hết hàng</div>
                    </div>
                </div>
            </div>


            <div class="filter-card">
                <div class="row g-3 align-items-center">
                    <div class="col-md-5">
                        <input type="text" id="search-input" class="form-control form-control-sm" placeholder="Tìm tên sản phẩm...">
                    </div>
                    <div class="col-md-3">
                        <select id="price-filter-select" class="form-select form-select-sm">
                            <option value="" selected>Lọc theo giá</option>
                            <option value="low-to-high">Thấp đến cao</option>
                            <option value="high-to-low">Cao đến thấp</option>
                        </select>
                    </div>
                   
                    <div class="col-md-2 text-end">
                        <a asp-area="QuanLySP" asp-controller="QuanLySP" asp-action="Create" class="btn btn-sm btn-success w-100">
                            <i class="fas fa-plus me-1"></i> Thêm SP
                        </a>
                    </div>
                </div>
            </div>

            <div class="table-container">
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-sm align-middle">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.First().TenSanPham)</th>
                                <th>@Html.DisplayNameFor(model => model.First().Gia)</th>
                                <th>
                                    @Html.DisplayNameFor(model => model.First().SoLuong)
                                    (@Html.DisplayNameFor(model => model.First().DonViTinh))
                                </th>
                                <th>@Html.DisplayNameFor(model => model.First().LoaiSanPham)</th>
                                <th class="text-center">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody id="product-table-body">
                            @foreach (var item in Model) // Lặp qua danh sách sản phẩm từ Model
                            {
                                <tr data-category="@item.M_LoaiSP">
                                    <td>@Html.DisplayFor(modelItem => item.TenSanPham)</td>
                                    <td>@item.Gia.ToString("N0") đ</td>
                                    <td>
                                        @item.SoLuong.ToString("N1") @(item.DonViTinh?.TenLoaiTinh)
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.LoaiSanPham.TenLoai)</td>
                                    <td class="actions text-center">
                                        <a asp-area="QuanLySP" asp-controller="QuanLySP" asp-action="Edit" asp-route-id="@item.M_SanPham" class="btn btn-sm btn-outline-primary" title="Chỉnh Sửa">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-area="QuanLySP" asp-controller="QuanLySP" asp-action="Details" asp-route-id="@item.M_SanPham" class="btn btn-sm btn-outline-info" title="Xem Chi Tiết">
                                            <i class="fas fa-info-circle"></i>
                                        </a>
                                        <a asp-area="QuanLySP" asp-controller="QuanLySP" asp-action="Delete" asp-route-id="@item.M_SanPham" class="btn btn-sm btn-outline-danger" title="Xóa">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                            @if (!Model.Any()) // Kiểm tra nếu không có sản phẩm nào
                            {
                                <tr>
                                    <td colspan="5" class="text-center fst-italic text-muted py-3">Không có sản phẩm nào phù hợp.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <nav aria-label="Product navigation" class="mt-3 d-flex justify-content-center">
                    <ul class="pagination pagination-sm" id="pagination"></ul>
                </nav>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="~/js/search.js"></script>
    <script src="~/js/price.js"></script>

    @* Script Lọc loại sản phẩm (cập nhật để dùng data-category) *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const categoryFilter = document.getElementById("category-filter-select");
            const tableBody = document.getElementById("product-table-body");
            const rows = Array.from(tableBody.querySelectorAll("tr"));

            function filterByCategory() {
                const selectedValue = categoryFilter.value; // Lấy M_LoaiSP từ value

                rows.forEach(row => {
                    // Lấy M_LoaiSP từ data-category của thẻ tr
                    const rowCategory = row.getAttribute('data-category');

                    if (!selectedValue || // Nếu không chọn gì thì hiện tất cả
                        (rowCategory && rowCategory === selectedValue)) { // Hoặc nếu category của dòng khớp với giá trị chọn
                        row.style.display = ""; // Hiện dòng
                    } else {
                        row.style.display = "none"; // Ẩn dòng
                    }
                });
                 // Cập nhật lại thống kê sau khi lọc (nếu cần thiết)
                 updateProductStatsBasedOnVisibleRows();
            }

            if (categoryFilter && tableBody) {
                 categoryFilter.addEventListener("change", filterByCategory);
            }

             // --- Giữ lại hàm thống kê, nhưng cần đảm bảo đọc đúng cột Số lượng ---
            function updateProductStatsBasedOnVisibleRows() {
                 if (!tableBody) return; // Thoát nếu không tìm thấy tbody

                 let total = 0;
                 let inStock = 0;
                 let outStock = 0;

                 // Lấy các dòng đang hiển thị
                 const visibleRows = Array.from(tableBody.querySelectorAll('tr')).filter(row => row.style.display !== 'none');

                 visibleRows.forEach(row => {
                     // Kiểm tra xem có phải dòng thông báo "Không có sản phẩm" không
                     if (row.cells.length < 4) return; // Bỏ qua nếu không đủ cột dữ liệu

                     // Lấy text từ cột Số Lượng (cột thứ 3 - index 2)
                     const khoiLuongCell = row.cells[2];
                     if(khoiLuongCell){
                         const khoiLuongText = khoiLuongCell.textContent.trim();
                         // Tách số đầu tiên ra (có thể là số thập phân)
                         const match = khoiLuongText.match(/^[+-]?([0-9]*[.,])?[0-9]+/);

                         if (match) {
                            // Thay dấu phẩy bằng dấu chấm để Parse hoạt động đúng
                            const numberString = match[0].replace(',', '.');
                            const khoiLuong = parseFloat(numberString);

                            if (!isNaN(khoiLuong)) { // Kiểm tra nếu là số hợp lệ
                                 total++; // Tăng tổng số SP hợp lệ hiển thị
                                 if (khoiLuong > 0) {
                                     inStock++;
                                 } else {
                                     outStock++;
                                 }
                            } else {
                                // Có thể xử lý trường hợp không parse được số (vd: chỉ có chữ "kg")
                                total++; // Vẫn đếm là 1 sản phẩm nhưng coi là hết hàng
                                outStock++;
                            }
                         } else {
                             // Trường hợp không có số trong cột (vd: trống hoặc chỉ có đơn vị)
                            total++; // Vẫn đếm là 1 sản phẩm nhưng coi là hết hàng
                            outStock++;
                         }
                     }
                 });

                 // Cập nhật số liệu vào Stat Cards
                 const totalEl = document.getElementById('total-products');
                 const inStockEl = document.getElementById('in-stock-products');
                 const outStockEl = document.getElementById('out-stock-products');

                 if(totalEl) totalEl.textContent = total;
                 if(inStockEl) inStockEl.textContent = inStock;
                 if(outStockEl) outStockEl.textContent = outStock;
            }

             // Gọi hàm thống kê ban đầu khi trang tải xong
             updateProductStatsBasedOnVisibleRows();

             // Gắn lại sự kiện cập nhật thống kê cho các filter khác nếu cần
             const searchInput = document.getElementById('search-input');
             const priceFilter = document.getElementById('price-filter-select');

             if(searchInput) searchInput.addEventListener('input', updateProductStatsBasedOnVisibleRows);
             if(priceFilter) priceFilter.addEventListener('change', updateProductStatsBasedOnVisibleRows);
        });
    </script>
    <script src="~/js/phantrangtruocsau.js"></script>

</body>
</html>